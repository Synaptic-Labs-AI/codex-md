import{FILE_CATEGORIES as e}from"./types.js";const i={default:Number.MAX_SAFE_INTEGER,video:Number.MAX_SAFE_INTEGER,audio:Number.MAX_SAFE_INTEGER};function t(i){if(!i)return!1;const t=("string"==typeof i?i:i.name||"").toLowerCase().split(".").pop();return Object.values(e).flat().includes(t)}function r(e){if(!e)return"0 B";const i=["B","KB","MB","GB"];let t=e,r=0;for(;t>=1024&&r<i.length-1;)t/=1024,r++;return`${Math.round(100*t)/100} ${i[r]}`}function a(e,t="default"){if(!e||!e.size)return{valid:!1,message:"Invalid file",maxSize:i[t]||i.default};const a=i[t]||i.default,s=e.size<=a;return{valid:s,maxSize:a,message:s?"":`File exceeds size limit of ${r(a)}`}}function s(e,i={}){if(!e)return{valid:!1,errors:["No file provided"]};const s=[];t(e)||s.push("Unsupported file type");const l=a(e,i.category);return l.valid||s.push(l.message),{valid:0===s.length,errors:s,fileSize:e.size,formattedSize:r(e.size),...l}}var l={FILE_SIZE_LIMITS:i,isValidFileType:t,formatFileSize:r,validateFileSize:a,validateFile:s};export{i as FILE_SIZE_LIMITS,l as default,r as formatFileSize,t as isValidFileType,s as validateFile,a as validateFileSize};
