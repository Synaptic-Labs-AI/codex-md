const e={documents:["pdf","docx","pptx","rtf","txt","md"],audio:["mp3","wav","ogg","m4a","aac","wma"],video:["mp4","mov","avi","mkv","webm"],data:["csv","xlsx","xls","json","yaml"],web:["url","parenturl"]},r={BINARY:"binary",TEXT:"text",URL:"url"},n={docx:{handling:r.BINARY,converter:"text",requiresOcr:!1},pptx:{handling:r.BINARY,converter:"text",requiresOcr:!1},pdf:{handling:r.BINARY,converter:"pdf",requiresOcr:!0},xlsx:{handling:r.BINARY,converter:"data",requiresOcr:!1},csv:{handling:r.TEXT,converter:"data",requiresOcr:!1},mp3:{handling:r.BINARY,converter:"audio",requiresOcr:!1},wav:{handling:r.BINARY,converter:"audio",requiresOcr:!1},mp4:{handling:r.BINARY,converter:"video",requiresOcr:!1}},t=["mp3","wav","ogg","m4a","mpga","mp4","webm","avi","mov","mpeg"];function i(i){const a="string"==typeof i?i:i.name||i.originalFileName||"unknown",o=a.split(".").pop().toLowerCase();if("object"==typeof i&&i.type&&["url","parenturl"].includes(i.type))return{fileName:a,fileType:i.type,category:"web",handling:r.URL,converter:i.type,requiresOcr:!1,isWeb:!0,isBinary:!1};let c="unknown";for(const[r,n]of Object.entries(e))if(n.includes(o)){c=r;break}const s=n[o]||{handling:r.TEXT,converter:"text",requiresOcr:!1};return{fileName:a,fileType:o,category:c,...s,isWeb:"web"===c,isBinary:s.handling===r.BINARY,requiresApiKey:t.includes(o)}}async function a(e){return i(e).isBinary?await e.arrayBuffer():await e.text()}function o(e){return i(e).category}function c(e){return i(e).requiresApiKey}var s={FILE_CATEGORIES:e,HANDLING_TYPES:r,CONVERTER_CONFIG:n,API_REQUIRED_TYPES:t,getFileHandlingInfo:i,getFileContent:a,getFileType:o,requiresApiKey:c};export{t as API_REQUIRED_TYPES,n as CONVERTER_CONFIG,e as FILE_CATEGORIES,r as HANDLING_TYPES,s as default,a as getFileContent,i as getFileHandlingInfo,o as getFileType,c as requiresApiKey};
